name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose

  snapshot:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run tests
      run: cargo test --verbose

  test262:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Init submodule
      run: |
        git submodule init
        git submodule update
    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Setup PNPM
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Build NAPI
      run: |
        pnpm i
        pnpm build
      working-directory: ./napi
    - name: Run Test262
      run: |
        pnpm i
        pnpm test
      working-directory: ./test
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.2.1-node20
      with:
        name: Test262 result
        path: |
          ./test/failed.txt
          ./test/stat.txt
    # Comment stat.txt to the commit or PR
    - name: Send comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');
          const stat = fs.readFileSync(path.resolve(__dirname, 'test/stat.txt'), 'utf-8');
          const body = `## Test262 result: \n\n${stat}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body
          });
