---
source: src/tests/mod.rs
expression: tree_shake(input)
input_file: src/tests/fixtures/mangling/object_property.js
---
export function plain_object(aaa, bbb) {
	const obj = {
		a: aaa,
		b: bbb
	};
	console.log(obj.a);
	console.log(obj.b);
}
export function computed_property(unknown, aaa, bbb) {
	const key = unknown ? "a" : "b";
	const obj = {
		a: aaa,
		b: bbb
	};
	console.log(obj[key]);
}
export function property_via_destructuring(aaa, bbb) {
	const { a: foo, b: bar } = {
		a: aaa,
		b: bbb
	};
	console.log(foo);
	console.log(bar);
}
export function with_rest(__unused_7A33, bbb) {
	const { a: __unused_EBAD,...rest } = { bar: bbb };
	console.log(rest.bar);
}
export function dynamic_destructuring(unknown, aaa, bbb) {
	const { [unknown ? "a" : "b"]: value } = {
		a: aaa,
		b: bbb
	};
	console.log(value);
}
export function multi_call(aaa, bbb) {
	function f(o) {
		console.log(o.a);
	}
	f({ a: aaa });
	f({ a: bbb });
}
export function accessing_prototype(aaa) {
	return {}.toString.call(aaa);
}
export function object_assign(aaa, bbb) {
	const obj = Object.assign({}, { b: aaa }, { a: bbb });
	console.log(obj.b);
	console.log(obj.a);
}
export function dunder_proto(aaa) {
	const obj = {
		__proto__: aaa,
		prop: aaa
	};
	console.log(obj.prop);
}
